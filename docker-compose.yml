services:
    cheshire-cat-core:
        build:
            context: ./core
        container_name: cheshire_cat_core
        # Uncomment the two lines below to use your .env (see .env.example)
        #env_file:
        #  - .env
        ports:
            - ${CCAT_CORE_PORT:-1865}:80
            - 5678:5678 # only for development purposes (take away in production)
        extra_hosts:
            - "host.docker.internal:host-gateway" # This add an entry to /etc/hosts file in the container mapping host.docker.internal to the host machine IP addr, allowing the container to access services running on the host, not only on Win and Mac but also Linux. See https://docs.docker.com/desktop/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host and https://docs.docker.com/reference/cli/docker/container/run/#add-host
        environment:
            # Timezone
            - TZ=${CCAT_TIMEZONE:-UTC}
        volumes:
            - ./core:/app
        command:
            - python
            - "-m"
            - "cat.main"
        restart: unless-stopped

    postgres:
        image: postgres:latest
        restart: always
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=123456
        volumes:
            - postgres:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "admin"]
            interval: 10s
            timeout: 5s
            retries: 5

    backend:
        build: ./backend
        ports:
            - "8080:8080"
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - ./backend/.env

    frontend:
        build: ./frontend
        ports:
            - "8081:8081"
        depends_on:
            - backend
        env_file:
            - ./frontend/.env
volumes:
    postgres:
